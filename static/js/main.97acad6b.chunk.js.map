{"version":3,"sources":["modules/nav/Nav.js","modules/home/Home.js","modules/postsList/actions/postsActions.js","modules/postsList/actions/addPostActions.js","modules/postsList/components/addPost/AddPost.js","modules/postsList/components/posts/Posts.js","modules/postsList/PostsList.js","modules/post/actions/postActions.js","modules/post/components/postSingle/PostSingle.js","modules/post/Post.js","modules/usersList/actions/usersListActions.js","modules/usersList/components/users/Users.js","modules/usersList/UsersList.js","modules/user/actions/userActions.js","modules/user/actions/userAlbumsActions.js","modules/user/actions/userPostsActions.js","modules/user/actions/userTodosActions.js","modules/user/components/userSingle/UserSingle.js","modules/user/components/userDetails/UserDetails.js","modules/user/components/userTab/UserTab.js","modules/user/components/userAlbums/UserAlbums.js","modules/user/components/userTodos/UserTodos.js","modules/user/components/userPosts/UserPosts.js","modules/user/User.js","modules/todo/actions/todoActions.js","modules/todo/components/todoInput/TodoInput.js","modules/todo/actions/todoListActions.js","modules/todo/components/todoItem/TodoItem.js","modules/todo/components/todoList/TodoList.js","modules/todo/Todo.js","App.js","modules/post/reducers/postReducer.js","modules/postsList/reducers/postsReducer.js","modules/user/reducers/userReducer.js","modules/user/reducers/userAlbumsReducer.js","modules/user/reducers/userTodosReducer.js","modules/user/reducers/userPostsReducer.js","modules/user/reducers/index.js","modules/usersList/reducers/usersListReducer.js","modules/todo/reducers/todoReducer.js","reducers/index.js","store/store.js","index.js"],"names":["Nav","className","to","Home","GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","ADD_POST","AddPost","dispatch","useDispatch","initialValues","title","body","onSubmit","value","action","a","fetch","method","JSON","stringify","userId","id","Date","getTime","headers","response","json","data","type","payload","console","log","resetForm","htmlFor","name","placeholder","as","Post","post","excerpt","substring","PostsList","posts","useSelector","state","loading","hasErrors","useEffect","map","GET_POST","GET_POST_SUCCESS","GET_POST_FAILURE","PostSingle","match","params","fetchGetPost","GET_USERS_LIST","GET_USERS_LIST_SUCCESS","GET_USERS_LIST_FAILURE","Users","user","username","UsersList","usersList","GET_USER","GET_USER_SUCCESS","GET_USER_FAILURE","GET_USER_ALBUMS","GET_USER_ALBUMS_SUCCESS","GET_USER_ALBUMS_FAILURE","GET_USER_POSTS","GET_USER_POSTS_SUCCESS","GET_USER_POSTS_FAILURE","GET_USER_TODOS","GET_USER_TODOS_SUCCESS","GET_USER_TODOS_FAILURE","UserSingle","icon","faEnvelope","email","faPhoneAlt","phone","faHouseUser","address","street","suite","city","zipcode","faShareAlt","website","faBriefcase","company","UserDetails","props","useState","activeTab","setActiveTab","children","tab","index","tabsStyle","onClick","UserTab","UserAlbums","album","UserTodos","todo","completed","UserPosts","User","userID","fetchUser","fetchUserTodos","fetchUserPosts","userSingle","userLoading","userHasErrors","userAlbums","userAlbumsLoading","userAlbumsHasErrors","userTodos","userTodosLoading","userTodosHasErrors","userPosts","userPostsLoading","userPostsHasErrors","ADD_TASK","COMPLETED_TASK","REMOVE_TASK","removeTask","completedTask","fetchCompletedTask","TodoInput","setTitle","onChange","e","target","fetchAddTask","GET_TODO_LIST","GET_TODO_LIST_SUCCESS","GET_TODO_LIST_FAILURE","getTodoListSuccess","todoList","TodoItem","TodoList","todos","hasError","isComplete","Todo","App","exact","path","component","initialState","userSingleReducer","combineReducers","rootReducer","concat","filter","task","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97acad6b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './nav.scss';\r\n\r\nexport const Nav = () => (\r\n  <nav className=\"nav-sticky\">\r\n    <section className=\"nav-wrapper\">\r\n      <Link to=\"/\" className=\"link\">Home</Link>\r\n      <Link to=\"/posts\" className=\"link\">Posts</Link>\r\n      <Link to=\"/users\" className=\"link\">Users</Link>\r\n      <Link to=\"/todo\" className=\"link\">Todo</Link>\r\n    </section>\r\n  </nav>\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './home.scss';\r\n\r\nexport const Home = () => (\r\n  <main className=\"home-page-container\">\r\n    <div className=\"home-page-wrapper\">\r\n      <h1 className=\"home-page-title\">Home page</h1>\r\n      <p>This is the home page.</p>\r\n      <div>\r\n        <Link to=\"/posts\" className=\"button\">View Posts</Link>\r\n        <Link to=\"/users\" className=\"button\">View Users</Link>\r\n        <Link to=\"/todo\" className=\"button\">Todo List</Link>\r\n      </div>\r\n    </div>\r\n  </main>\r\n);\r\n","export const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\r\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE';\r\n\r\nconst getPosts = () => ({\r\n  type: GET_POSTS,\r\n});\r\n\r\nconst getPostsSuccess = (posts) => ({\r\n  type: GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nconst getPostsFailure = () => ({\r\n  type: GET_POSTS_FAILURE,\r\n});\r\n\r\nexport const fetchPosts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getPosts());\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n      const data = await response.json();\r\n      dispatch(getPostsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getPostsFailure());\r\n    }\r\n  };\r\n};\r\n","export const ADD_POST = 'ADD_POST';\r\n\r\nconst addPost = (post) => ({\r\n  type: ADD_POST,\r\n  payload: post,\r\n});\r\n\r\nexport const fetchAddPost = (title, body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          userId: 1,\r\n          id: (new Date()).getTime(),\r\n          title: title,\r\n          body: body,\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      dispatch(addPost(data));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { fetchAddPost } from '../../actions/addPostActions';\r\n\r\nimport './addPost.scss';\r\n\r\nexport const AddPost = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const initialValues = {\r\n    title: '',\r\n    body: '',\r\n  };\r\n\r\n  const onSubmit = (value, action) => {\r\n    if (value.title && value.body) {\r\n      dispatch(fetchAddPost(value.title, value.body));\r\n      action.resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Form className=\"new-post-wrapper\">\r\n        <div className=\"add-post-content\">\r\n          <h2 className=\"title-new-post\">Add Post</h2>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <Field \r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"Title post...\"\r\n            className=\"add-post-title-field\"\r\n          />\r\n\r\n          <label htmlFor=\"body\">Body</label>\r\n          <Field \r\n            as=\"textarea\"\r\n            id=\"body\"\r\n            name=\"body\"\r\n            placeholder=\"Body post...\"\r\n            className=\"add-post-body-field\"\r\n          />\r\n\r\n          <button type=\"submit\" className=\"add-post-button\">Add Post</button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './posts.scss';\r\n\r\nexport const Post = ({ post, excerpt }) => (\r\n  <Link to={`./posts/${post.id}`} className=\"post-wrapper\">\r\n    <h3 className=\"post-title\">{post.title}</h3>\r\n    <div className=\"post-body\">{excerpt ? post.body.substring(0, 100) + '...' : post.body}</div>\r\n  </Link>\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchPosts } from './actions/postsActions';\r\nimport { AddPost } from './components/addPost/AddPost';\r\nimport { Post } from './components/posts/Posts';\r\n\r\nimport './postsList.scss';\r\n\r\nexport const PostsList = () => {\r\n  const posts = useSelector(state => state.posts.posts);\r\n  const loading = useSelector(state => state.posts.loading);\r\n  const hasErrors = useSelector(state => state.posts.hasErrors);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, [dispatch]);\r\n\r\n  const renderPosts = () => {\r\n    if (loading) {\r\n      return <p>Loading posts...</p>;\r\n    } else if (hasErrors) {\r\n      return <p>Unable to display posts.</p>;\r\n    } else {\r\n      return posts.map(post => <Post key={post.id} post={post} excerpt />);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"post-list-container\">\r\n        {AddPost()}\r\n      <div className=\"post-list-wrapper\">\r\n        <h1 className=\"post-list-title\">Posts</h1>\r\n        {renderPosts()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","export const GET_POST = 'GET_POST';\r\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS';\r\nexport const GET_POST_FAILURE = 'GET_POST_FAILURE';\r\n\r\nconst getPost = () => ({\r\n  type: GET_POST,\r\n});\r\n\r\nconst getPostSuccess = (post) => ({\r\n  type: GET_POST_SUCCESS,\r\n  payload: post,\r\n});\r\n\r\nconst getPostFailure = () => ({\r\n  type: GET_POST_FAILURE,\r\n});\r\n\r\nexport const fetchGetPost = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getPost());\r\n    try {\r\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n      const data = await response.json();\r\n      dispatch(getPostSuccess(data));\r\n    } catch (err) {\r\n      dispatch(getPostFailure());\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport './postSingle.scss';\r\n\r\nexport const PostSingle = ({ post }) => (\r\n  <div className=\"post-single-wrapper\">\r\n    <h3 className=\"post-single-title\">{post.title}</h3>\r\n    <div className=\"post-single-body\">{post.body}</div>\r\n  </div>\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchGetPost } from './actions/postActions';\r\nimport { PostSingle } from './components/postSingle/PostSingle';\r\n\r\nexport const Post = ({ match }) => {\r\n  const post = useSelector(state => state.post.post);\r\n  const loading = useSelector(state => state.post.loading);\r\n  const hasErrors = useSelector(state => state.post.hasErrors);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n    dispatch(fetchGetPost(id));\r\n  }, [dispatch, match]);\r\n\r\n  const renderPost = () => {\r\n    if (loading) {\r\n      return <p>Loading post...</p>;\r\n    } else if (hasErrors) {\r\n      return <p>Unable to display post.</p>;\r\n    } else {\r\n      return <PostSingle key={post.id} post={post} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {renderPost()}\r\n    </section>\r\n  );\r\n};\r\n","export const GET_USERS_LIST = 'GET_USERS_LIST';\r\nexport const GET_USERS_LIST_SUCCESS = 'GET_USERS_LIST_SUCCESS';\r\nexport const GET_USERS_LIST_FAILURE = 'GET_USERS_LIST_FAILURE';\r\n\r\nconst getUsersList = () => ({\r\n  type: GET_USERS_LIST,\r\n});\r\n\r\nconst getUsersListSuccess = (usersList) => ({\r\n  type: GET_USERS_LIST_SUCCESS,\r\n  payload: usersList,\r\n});\r\n\r\nconst getUsersListFailure = () => ({\r\n  type: GET_USERS_LIST_FAILURE,\r\n});\r\n\r\nexport const fetchUsersList = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getUsersList());\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n      const data = await response.json();\r\n      dispatch(getUsersListSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getUsersListFailure());\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './users.scss';\r\n\r\nexport const Users = ({ user }) => (\r\n  <div className=\"users-wrapper\">\r\n    <div className=\"users-inner\">\r\n      <Link to={`./users/${user.id}`} className=\"user-name-link\">\r\n        {user.name}\r\n      </Link>\r\n      <div className=\"users-param\">Username:</div><div>{user.username}</div>\r\n      <Link to={`./users/${user.id}`} className=\"button-user-profile\">\r\n        View profile\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchUsersList } from './actions/usersListActions';\r\nimport { Users } from './components/users/Users';\r\n\r\nimport './usersList.scss';\r\n\r\nexport const UsersList = () => {\r\n  const usersList = useSelector(state => state.usersList.usersList);\r\n  const loading = useSelector(state => state.usersList.loading);\r\n  const hasErrors = useSelector(state => state.usersList.hasErrors);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsersList());\r\n  }, [dispatch]);\r\n\r\n  const renderUsersList = () => {\r\n    if (loading) { \r\n      return <p>Loading users list...</p>; \r\n    } else if (hasErrors) {\r\n      return <p>Unable to display users.</p>;\r\n    } else {\r\n      return usersList.map(user => <Users key={user.id} user={user} />);\r\n    } \r\n  };\r\n\r\n  return (\r\n    <section className=\"user-list-wrapper\">\r\n      <h1 className=\"user-list-title\">Users</h1>\r\n      {renderUsersList()}\r\n    </section>\r\n  );\r\n};\r\n","export const GET_USER = 'GET_USER';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';\r\n\r\nconst getUser = () => ({\r\n  type: GET_USER,\r\n});\r\n\r\nconst getUserSuccess = (user) => ({\r\n  type: GET_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst getUserFailure = () => ({\r\n  type: GET_USER_FAILURE,\r\n});\r\n\r\nexport const fetchUser = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getUser());\r\n    try {\r\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      const data = await response.json();\r\n      dispatch(getUserSuccess(data));\r\n    } catch (err) {\r\n      dispatch(getUserFailure());\r\n    }\r\n  };\r\n};\r\n","export const GET_USER_ALBUMS = 'GET_USER_ALBUMS';\r\nexport const GET_USER_ALBUMS_SUCCESS = 'GET_USER_ALBUMS_SUCCESS';\r\nexport const GET_USER_ALBUMS_FAILURE = 'GET_USER_ALBUMS_FAILURE';\r\n\r\nconst getUserAlbums = () => ({\r\n  type: GET_USER_ALBUMS,\r\n});\r\n\r\nconst getUserAlbumsSuccess = (albums) => ({\r\n  type: GET_USER_ALBUMS_SUCCESS,\r\n  payload: albums,\r\n});\r\n\r\nconst getUserAlbumsFailure = () => ({\r\n  type: GET_USER_ALBUMS_FAILURE,\r\n});\r\n\r\nexport const fetchUserAlbums = (userID) => {\r\n  return async (dispatch) => {\r\n    dispatch(getUserAlbums());\r\n    try {\r\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userID}/albums`);\r\n      const data = await response.json();\r\n      dispatch(getUserAlbumsSuccess(data));\r\n    } catch (err) {\r\n      dispatch(getUserAlbumsFailure());\r\n    }\r\n  }\r\n};\r\n","export const GET_USER_POSTS = 'GET_USER_POSTS';\r\nexport const GET_USER_POSTS_SUCCESS = 'GET_USER_POSTS_SUCCESS';\r\nexport const GET_USER_POSTS_FAILURE = 'GET_USER_POSTS_FAILURE';\r\n\r\nconst getUserPosts = () => ({\r\n  type: GET_USER_POSTS,\r\n});\r\n\r\nconst getUserPostsSuccess = (albums) => ({\r\n  type: GET_USER_POSTS_SUCCESS,\r\n  payload: albums,\r\n});\r\n\r\nconst getUserPostsFailure = () => ({\r\n  type: GET_USER_POSTS_FAILURE,\r\n});\r\n\r\nexport const fetchUserPosts = (userID) => {\r\n  return async (dispatch) => {\r\n    dispatch(getUserPosts());\r\n    try {\r\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userID}/posts`);\r\n      const data = await response.json();\r\n      dispatch(getUserPostsSuccess(data));\r\n    } catch (err) {\r\n      dispatch(getUserPostsFailure());\r\n    }\r\n  }\r\n};\r\n","export const GET_USER_TODOS = 'GET_USER_TODOS';\r\nexport const GET_USER_TODOS_SUCCESS = 'GET_USER_TODOS_SUCCESS';\r\nexport const GET_USER_TODOS_FAILURE = 'GET_USER_TODOS_FAILURE';\r\n\r\nconst getUserTodos = () => ({\r\n  type: GET_USER_TODOS,\r\n});\r\n\r\nconst getUserTodosSuccess = (albums) => ({\r\n  type: GET_USER_TODOS_SUCCESS,\r\n  payload: albums,\r\n});\r\n\r\nconst getUserTodosFailure = () => ({\r\n  type: GET_USER_TODOS_FAILURE,\r\n});\r\n\r\nexport const fetchUserTodos = (userID) => {\r\n  return async (dispatch) => {\r\n    dispatch(getUserTodos());\r\n    try {\r\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userID}/todos`);\r\n      const data = await response.json();\r\n      dispatch(getUserTodosSuccess(data));\r\n    } catch (err) {\r\n      dispatch(getUserTodosFailure());\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faPhoneAlt, faHouseUser, faShareAlt, faBriefcase } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './userSingle.scss';\r\n\r\nexport const UserSingle = ({ user }) => (\r\n  <div className=\"user-wrapper\">\r\n    <div className=\"user\">\r\n      <h3 className=\"user-name\">{user.name}</h3>\r\n\r\n      <div className=\"user-param\">\r\n        <FontAwesomeIcon icon={faEnvelope} className=\"icon\" />\r\n        <div>\r\n          <div>{user.email}</div>\r\n          <p className=\"user-data\">Email</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"user-param\">\r\n        <FontAwesomeIcon icon={faPhoneAlt} className=\"icon\" />\r\n        <div>\r\n          <div>{user.phone}</div>\r\n          <p className=\"user-data\">Mobile</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"user-param\">\r\n        <FontAwesomeIcon icon={faHouseUser} className=\"icon\" />\r\n        <div>\r\n          <div>{user.address.street}, {user.address.suite}, {user.address.city}, {user.address.zipcode}</div>\r\n          <p className=\"user-data\">Home</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"user-param\">\r\n        <FontAwesomeIcon icon={faShareAlt} className=\"icon\" />\r\n        <div>\r\n          <div>{user.website}</div>\r\n          <p className=\"user-data\">Website</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"user-param\">\r\n        <FontAwesomeIcon icon={faBriefcase} className=\"icon\" />\r\n        <div>\r\n          <div>{user.company.name}</div>\r\n          <p className=\"user-data\">Work</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useState } from 'react';\r\n\r\nimport './userDetails.scss';\r\n\r\nexport const UserDetails = (props) => {\r\n  const [ activeTab, setActiveTab ] = useState(0);\r\n\r\n  const renderTabs = () => {\r\n    const tabs = props.children;\r\n    return tabs.map((tab, index) => {\r\n      let tabsStyle = index === activeTab ? \"tab selected\" : \"tab\";\r\n      return (\r\n        <div \r\n          key={index}\r\n          index={index}\r\n          activeTab={activeTab}\r\n          className={tabsStyle}\r\n          onClick={() => setActiveTab(index)}\r\n        >\r\n          {tab.props.title}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-details-container\">\r\n      <div className=\"tabs-list\">{renderTabs()}</div>\r\n      <div className=\"user-content\">\r\n        {props.children[activeTab]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const UserTab = ({ children }) => {\r\n  return <div>{children}</div>\r\n};\r\n","import React from 'react';\r\n\r\nimport './userAlbums.scss';\r\n\r\nexport const UserAlbums = ({ album }) => (\r\n  <div className=\"user-album\">\r\n    {album.title}\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './userTodos.scss';\r\n\r\nexport const UserTodos = ({ todo }) => (\r\n  <div className=\"user-todo-item\">\r\n    <span className={todo.completed ? 'mark check-circle' : 'mark circle'}></span>\r\n    <span className={todo.completed ? 'completed text' : 'text'} >{todo.title}</span>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './userPosts.scss';\r\n\r\nexport const UserPosts = ({ post }) => (\r\n  <div className=\"post-single-wrapper user-post\">\r\n    <div className=\"post-single-title\">{post.title}</div>\r\n    <div className=\"post-single-body\">{post.body}</div>\r\n  </div>\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { fetchUser } from './actions/userActions';\r\nimport { fetchUserAlbums } from './actions/userAlbumsActions';\r\nimport { fetchUserPosts } from './actions/userPostsActions';\r\nimport { fetchUserTodos } from './actions/userTodosActions';\r\nimport { UserSingle } from './components/userSingle/UserSingle';\r\nimport { UserDetails } from './components/userDetails/UserDetails';\r\nimport { UserTab } from './components/userTab/UserTab';\r\nimport { UserAlbums } from './components/userAlbums/UserAlbums';\r\nimport { UserTodos } from './components/userTodos/UserTodos';\r\nimport { UserPosts } from './components/userPosts/UserPosts';\r\n\r\nimport './user.scss';\r\n\r\nexport const User = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n    dispatch(fetchUser(id));\r\n    dispatch(fetchUserAlbums(id));\r\n    dispatch(fetchUserTodos(id));\r\n    dispatch(fetchUserPosts(id));\r\n  }, [dispatch, match]);\r\n\r\n  const renderUser = () => {\r\n    if (user.userSingle.userLoading) {\r\n      return <p>Loading user...</p>;\r\n    } else if (user.userSingle.userHasErrors) {\r\n      return <p>Unable to display user.</p>;\r\n    } else {\r\n      return user.userSingle.userSingle.map(user => <UserSingle key={user.id} user={user} />);\r\n    }\r\n  };\r\n\r\n  const renderUserAlbums = () => {\r\n    if (user.userAlbums.userAlbumsLoading) {\r\n      return <p>Loading albums...</p>;\r\n    } else if (user.userAlbums.userAlbumsHasErrors) {\r\n      <p>Unable to display albums.</p>\r\n    } else {\r\n      return user.userAlbums.userAlbums.map(album => <UserAlbums key={album.id} album={album} /> );\r\n    }\r\n  }\r\n\r\n  const renderUserTodos = () => {\r\n    if (user.userTodos.userTodosLoading) {\r\n      return <p>Loading todo...</p>;\r\n    } else if (user.userTodos.userTodosHasErrors) {\r\n      <p>Unable to display todo.</p>\r\n    } else {\r\n      return user.userTodos.userTodos.map(todo => <UserTodos key={todo.id} todo={todo} completed={todo.completed} />)\r\n    }\r\n  }\r\n\r\n  const renderUserPosts = () => {\r\n    if (user.userPosts.userPostsLoading) {\r\n      return <p>Loading posts...</p>;\r\n    } else if (user.userPosts.userPostsHasErrors) {\r\n      <p>Unable to display posts.</p>\r\n    } else {\r\n      return user.userPosts.userPosts.map(post => <UserPosts key={post.id} post={post} />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"user-container\">\r\n      <div className=\"user-inner\">\r\n        {renderUser()}\r\n        <UserDetails>\r\n          <UserTab title=\"Albums\">\r\n            {renderUserAlbums()}\r\n          </UserTab>\r\n          <UserTab title=\"Todos\">\r\n            {renderUserTodos()}\r\n          </UserTab>\r\n          <UserTab title=\"Posts\">\r\n            {renderUserPosts()}\r\n          </UserTab>\r\n        </UserDetails>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const COMPLETED_TASK = 'COMPLETED_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\n\r\nconst addTask = (task) => ({\r\n  type: ADD_TASK,\r\n  payload: task,\r\n});\r\n\r\nconst removeTask = (id) => ({\r\n  type: REMOVE_TASK,\r\n  payload: id,\r\n});\r\n\r\nconst completedTask = (id, completed) => ({\r\n  type: COMPLETED_TASK,\r\n  payload: {\r\n    id,\r\n    completed,\r\n  },\r\n});\r\n\r\nexport const fetchAddTask = (title) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          userId: 1,\r\n          id: (new Date()).getTime(),\r\n          title: title,\r\n          completed: false\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      dispatch(addTask(data));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchRemoveTask = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      dispatch(removeTask(id));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCompletedTask = (id, completed) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          id,\r\n          completed\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      });\r\n      dispatch(completedTask(id, completed));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { fetchAddTask } from '../../actions/todoActions';\r\n\r\nimport './todoInput.scss';\r\n\r\nexport const TodoInput = () => {\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n  const onTitleChange = (e) => setTitle(e.target.value);\r\n\r\n  const onSaveTaskClicked = () => {\r\n    if (title) {\r\n      dispatch(fetchAddTask(title));\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-input-wrapper\">\r\n      <input \r\n        className=\"todo-input\" \r\n        type=\"text\" \r\n        placeholder=\"Write your task\" \r\n        value={title} \r\n        onChange={onTitleChange} \r\n      />\r\n      <button type=\"button\" className=\"todo-input-button\" onClick={onSaveTaskClicked}>Add</button>\r\n    </form>\r\n  );\r\n};\r\n","export const GET_TODO_LIST = 'GET_TODOS';\r\nexport const GET_TODO_LIST_SUCCESS = 'GET_TODOS_SUCCESS';\r\nexport const GET_TODO_LIST_FAILURE = 'GET_TODOS_FAILURE';\r\n\r\nconst getTodoList = () => ({\r\n  type: GET_TODO_LIST\r\n});\r\n\r\nconst getTodoListSuccess = (todoList) => ({\r\n  type: GET_TODO_LIST_SUCCESS,\r\n  payload: todoList,\r\n});\r\n\r\nconst getTodoListFailure = () => ({\r\n  type: GET_TODO_LIST_FAILURE\r\n});\r\n\r\nexport const fetchTodoList = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getTodoList());\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/todos');\r\n      const data = await response.json();\r\n      dispatch(getTodoListSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getTodoListFailure());\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { fetchCompletedTask, fetchRemoveTask } from '../../actions/todoActions';\r\n\r\nimport './todoItem.scss';\r\n\r\nexport const TodoItem = ({ todo }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <span onClick={() => dispatch(fetchCompletedTask(todo.id, todo.completed))} className={todo.completed ? 'mark check-circle' : 'mark circle'} ></span>\r\n      <span onClick={() => dispatch(fetchCompletedTask(todo.id, todo.completed))} className={todo.completed ? 'completed text' : 'text'}>{todo.title}</span>\r\n      <span onClick={() => dispatch(fetchRemoveTask(todo.id))} className=\"delete-task\">X</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { fetchTodoList } from '../../actions/todoListActions';\r\nimport { TodoItem } from '../todoItem/TodoItem';\r\n\r\nimport './todoList.scss';\r\n\r\nexport const TodoList = () => {\r\n  const todos = useSelector(state => state.todo.todoList);\r\n  const loading = useSelector(state => state.todo.loading);\r\n  const hasError = useSelector(state => state.todo.hasError);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(fetchTodoList());\r\n  }, [dispatch]);\r\n\r\n\r\n  const renderTodoList = () => {\r\n    if (loading) {\r\n      return <p>Loading todo list...</p>;\r\n    } else if (hasError) {\r\n      return <p>Unable to display todo list.</p>;\r\n    } else {\r\n      return todos.map(todo => <TodoItem key={todo.id} todo={todo} isComplete={todo.completed} />);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"todo-list\">\r\n      {renderTodoList()}\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { TodoInput } from './components/todoInput/TodoInput';\r\nimport { TodoList } from './components/todoList/TodoList';\r\n\r\nimport './todo.scss';\r\n\r\nexport const Todo = () => (\r\n  <div className=\"todo-wrapper\">\r\n    <h2 className=\"title\">Todo List</h2>\r\n    <TodoInput />\r\n    <TodoList />\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { Nav } from './modules/nav/Nav';\r\nimport { Home } from './modules/home/Home';\r\nimport { PostsList } from './modules/postsList/PostsList';\r\nimport { Post } from './modules/post/Post';\r\nimport { UsersList } from './modules/usersList/UsersList';\r\nimport { User } from './modules/user/User';\r\nimport { Todo } from './modules/todo/Todo';\r\n\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Nav />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/posts\" component={PostsList} />\r\n        <Route exact path=\"/posts/:id\" component={Post} />\r\n        <Route exact path=\"/users\" component={UsersList} />\r\n        <Route exact path=\"/users/:id\" component={User} />\r\n        <Route exact path=\"/todo\" component={Todo} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { GET_POST, GET_POST_SUCCESS, GET_POST_FAILURE } from '../actions/postActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasError: false,\r\n  post: {},\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POST:\r\n      return { ...state, loading: true };\r\n    case GET_POST_SUCCESS:\r\n      return { post: action.payload, loading: false, hasError: false };\r\n    case GET_POST_FAILURE:\r\n      return { ...state, loading: false, hasError: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_POST } from '../actions/addPostActions';\r\nimport { GET_POSTS, GET_POSTS_SUCCESS, GET_POSTS_FAILURE } from '../actions/postsActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  posts: [],\r\n};\r\n\r\nexport const postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return { ...state, loading: true };\r\n    case GET_POSTS_SUCCESS:\r\n      return { posts: action.payload, loading: false, hasErrors: false };\r\n    case GET_POSTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    case ADD_POST:\r\n      return { posts: state.posts.concat([action.payload]) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_USER, GET_USER_SUCCESS, GET_USER_FAILURE } from '../actions/userActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  userSingle: [],\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return { ...state, loading: true };\r\n    case GET_USER_SUCCESS:\r\n      return { userSingle: [action.payload], loading: false, hasErrors: false };\r\n    case GET_USER_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_USER_ALBUMS,\r\n  GET_USER_ALBUMS_SUCCESS,\r\n  GET_USER_ALBUMS_FAILURE\r\n} from '../actions/userAlbumsActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  userAlbums: [],\r\n};\r\n\r\nexport const userAlbumsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_ALBUMS:\r\n      return { ...state, loading: true };\r\n    case GET_USER_ALBUMS_SUCCESS:\r\n      return { userAlbums: action.payload, loading: false, hasErrors: false };\r\n    case GET_USER_ALBUMS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_USER_TODOS,\r\n  GET_USER_TODOS_SUCCESS,\r\n  GET_USER_TODOS_FAILURE\r\n} from '../actions/userTodosActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  userTodos: [],\r\n};\r\n\r\nexport const userTodosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_TODOS:\r\n      return { ...state, loading: true };\r\n    case GET_USER_TODOS_SUCCESS:\r\n      return { userTodos: action.payload, loading: false, hasErrors: false };\r\n    case GET_USER_TODOS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_USER_POSTS,\r\n  GET_USER_POSTS_SUCCESS,\r\n  GET_USER_POSTS_FAILURE\r\n} from '../actions/userPostsActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  userPosts: [],\r\n};\r\n\r\nexport const userPostsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_POSTS:\r\n      return { ...state, loading: true };\r\n    case GET_USER_POSTS_SUCCESS:\r\n      return { userPosts: action.payload, loading: false, hasErrors: false };\r\n    case GET_USER_POSTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { userReducer } from './userReducer';\r\nimport { userAlbumsReducer } from './userAlbumsReducer';\r\nimport { userTodosReducer } from './userTodosReducer';\r\nimport { userPostsReducer } from './userPostsReducer';\r\n\r\nexport const userSingleReducer = combineReducers({\r\n  userSingle: userReducer,\r\n  userAlbums: userAlbumsReducer,\r\n  userTodos: userTodosReducer,\r\n  userPosts: userPostsReducer,\r\n});\r\n","import { GET_USERS_LIST, GET_USERS_LIST_SUCCESS, GET_USERS_LIST_FAILURE } from '../actions/usersListActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  usersList: [],\r\n};\r\n\r\nexport const usersListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS_LIST:\r\n      return { ...state, loading: true };\r\n    case GET_USERS_LIST_SUCCESS:\r\n      return { usersList: action.payload, loading: false, hasErrors: false };\r\n    case GET_USERS_LIST_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_TASK, REMOVE_TASK, COMPLETED_TASK } from '../actions/todoActions';\r\nimport { GET_TODO_LIST, GET_TODO_LIST_SUCCESS, GET_TODO_LIST_FAILURE } from '../actions/todoListActions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasError: false,\r\n  todoList: [],\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODO_LIST:\r\n      return { ...state, loading: true };\r\n    case GET_TODO_LIST_SUCCESS:\r\n      return { todoList: action.payload, loading: false, hasError: false };\r\n    case GET_TODO_LIST_FAILURE:\r\n      return { ...state, loading: false, hasError: true };\r\n    case ADD_TASK:\r\n      return { todoList: state.todoList.concat([action.payload]) };\r\n    case REMOVE_TASK:\r\n      return { todoList: state.todoList.filter(task => task.id !== action.payload) };\r\n    case COMPLETED_TASK:\r\n      return {\r\n        todoList: state.todoList.map(task => {\r\n          if (task.id !== action.payload.id) {\r\n            return task;\r\n          }\r\n          return { ...task, completed: !task.completed };\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { postReducer } from '../modules/post/reducers/postReducer';\r\nimport { postsReducer } from '../modules/postsList/reducers/postsReducer';\r\nimport { userSingleReducer } from '../modules/user/reducers/index';\r\nimport { usersListReducer } from '../modules/usersList/reducers/usersListReducer';\r\nimport { todoReducer } from '../modules/todo/reducers/todoReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  post: postReducer,\r\n  posts: postsReducer,\r\n  user: userSingleReducer,\r\n  usersList: usersListReducer,\r\n  todo: todoReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/index';\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport { store } from './store/store';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}